{"version":3,"sources":["components/AppNavigator.js","config/index.js","components/PokemonCard.js","containers/Pokedex.js","components/AbilityModal.js","containers/PokemonDetails.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","AppBar","display","backgroundColor","position","zIndex","link","textDecoration","title","color","cursor","fontWeight","justifyContent","searchIcon","alignSelf","textSearch","searchContainer","paddingLeft","paddingRight","marginTop","marginBottom","pokemonName","AppNavigator","classes","className","Toolbar","to","Typography","variant","POKEMON_API_URL","cardMedia","margin","width","height","card","cardContent","textAlign","PokemonCard","props","pokemon","image","id","name","Grid","item","xs","sm","lg","Card","CardMedia","CardContent","pokedexContainer","mainBox","padding","text","fontSize","fontStyle","searchText","paginationStack","Pokedex","useState","pokemonData","setPokemonData","searchPokemon","setSearchPokemon","loading","setLoading","getPokemon","a","axios","get","res","results","data","newPokemon","forEach","index","pokemonObject","url","type","push","console","log","useEffect","Box","TextField","onChange","e","target","value","label","container","spacing","filter","toLowerCase","includes","map","CircularProgress","style","Stack","Pagination","count","pageSize","top","left","transform","bgcolor","border","boxShadow","p","BasicModal","open","setOpen","Button","onClick","ability","Modal","onClose","sx","component","mt","PokemonDetails","state","match","this","params","then","response","status","setState","sprites","weight","types","abilities","stats","pokemonNavName","pokemonImgContainer","src","other","dream_world","front_default","alt","imgPokemon","pokemonInfoContainer","md","grid","textDetails","pokemonType","pokemonStats","base_stat","stat","textTransform","pokemonAbility","abilityModal","Component","withStyles","marginLeft","borderRadius","paddingTop","textTitle","fontFamily","alignItems","lineSeparator","faveButton","faveIcon","right","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.201531c3.chunk.js","sourcesContent":["import React from 'react'\r\nimport {AppBar, Toolbar, Typography} from '@material-ui/core';\r\nimport { makeStyles} from '@material-ui/core/styles';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    AppBar: {\r\n        display: 'flex',\r\n        backgroundColor: 'crimson',\r\n        position: 'fixed',\r\n        zIndex: 10\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n    },\r\n    title: {\r\n        color: 'white',\r\n        cursor: 'pointer',\r\n        fontWeight: 'bold',\r\n        justifyContent: 'flex-start'\r\n    },\r\n    searchIcon: {\r\n        color: 'ivory',\r\n        alignSelf: 'flex-end'\r\n    },\r\n    textSearch: {\r\n        color: 'white'\r\n    },\r\n    searchContainer: {\r\n        display: 'flex',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n    },\r\n    pokemonName: {\r\n        justifyContent: 'flex-start '\r\n    }\r\n}));\r\n\r\nexport default function AppNavigator() {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <AppBar className={classes.AppBar}>\r\n            <Toolbar>\r\n                <Link to=\"/\" className={classes.link}>\r\n                     <Typography className={classes.title} variant=\"h6\">Pokedex</Typography>\r\n                </Link>\r\n            </Toolbar>\r\n        </AppBar>   \r\n    )\r\n}\r\n","export const POKEMON_API_URL = \"https://pokeapi.co/api/v2/pokemon\"\r\nexport const IMAGE_API_URL = \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\"\r\nexport const POKEMON_SPECIES_API_URL = \"https://pokeapi.co/api/v2/pokemon-species\"","import { Card, CardContent, CardMedia, Grid, Typography, makeStyles } from '@material-ui/core';\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    cardMedia: {\r\n        margin: 'auto',\r\n        width: 130,\r\n        height: 130\r\n    },\r\n    card: {\r\n        cursor: 'pointer',\r\n        backgroundColor: 'darkblue',\r\n        color: 'white',\r\n        \"&:hover\": {\r\n            backgroundColor: 'lightblue',\r\n            color: 'darkblue'\r\n        }\r\n    },\r\n    cardContent: {\r\n        textAlign: 'center'\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n    }\r\n}))\r\n\r\nexport default function PokemonCard(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const { pokemon, image } = props;\r\n    const { id, name } = pokemon;\r\n\r\n    return (\r\n        <Grid item xs={12} sm={2} lg={3} key={id}>\r\n            <Link to={\"/pokemon/\" + id} className={classes.link}>\r\n                <Card className={classes.card}>\r\n                    <CardMedia className={classes.cardMedia} image={image}></CardMedia>\r\n                    <CardContent className={classes.cardContent}>\r\n                        <Typography>\r\n                           #{id} {name}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Link>   \r\n        </Grid>\r\n    )\r\n}\r\n","import { Box, CircularProgress, Grid, makeStyles, TextField } from '@material-ui/core'\r\nimport React, {useEffect, useState} from 'react'\r\nimport axios from 'axios';\r\nimport { IMAGE_API_URL, POKEMON_API_URL } from '../config';\r\nimport PokemonCard from '../components/PokemonCard';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Stack } from '@mui/material';\r\nimport { Pagination } from '@mui/material';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    pokedexContainer: {\r\n        textAlign: 'center'\r\n    },\r\n    mainBox: {\r\n        padding: \"65px 10px 30px 10px\",\r\n        textAlign: 'center', \r\n    },\r\n    text: {\r\n        fontSize: 30,\r\n        fontStyle: 'Verdana',\r\n        alignSelf: 'flex-end'\r\n    },\r\n    searchContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n    }, \r\n    cardMedia: {\r\n        margin: 'auto',\r\n        width: 130,\r\n        height: 130\r\n    },\r\n    searchIcon: {\r\n        alignSelf:'flex-end',\r\n        color: 'darkblue',\r\n    },\r\n    searchText: {\r\n        width: 200,\r\n        margin: 5\r\n    },\r\n    paginationStack: {\r\n        justifyContent: 'center'\r\n    }\r\n}));\r\n\r\nexport default function Pokedex() {\r\n\r\n    const classes = useStyles();\r\n    const [pokemonData, setPokemonData] = useState([]);\r\n    const [searchPokemon, setSearchPokemon] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const getPokemon = async () => {\r\n\r\n        try{\r\n            setLoading(true);\r\n\r\n            const url = POKEMON_API_URL + \"/?limit=898\";\r\n            const res = await axios.get(url);\r\n\r\n            setLoading(false);\r\n\r\n            const {results} = res.data;\r\n\r\n            let newPokemon = [];\r\n\r\n            results.forEach((pokemon, index) => {\r\n                index++;\r\n\r\n                let pokemonObject = {\r\n                    id: index,\r\n                    url: IMAGE_API_URL + index + '.png',\r\n                    name: pokemon.name,\r\n                    type: pokemon.type\r\n                };\r\n                newPokemon.push(pokemonObject);\r\n            });\r\n\r\n            setPokemonData(newPokemon);\r\n\r\n        }\r\n        catch (e){\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getPokemon();\r\n    }, []);\r\n\r\n    if (loading) return \"Loading Pokemons...\"\r\n\r\n    return (\r\n        <Box className={classes.mainBox}>\r\n\r\n            <div className={classes.searchContainer}>\r\n                <SearchIcon className={classes.searchIcon} />\r\n                <TextField className={classes.searchText} onChange={e => {setSearchPokemon(e.target.value)}} label=\"Search Pokemon...\" variant=\"standard\" />\r\n            </div>\r\n            \r\n            <br />\r\n            {pokemonData ? \r\n                <Grid container spacing={2} className={classes.pokedexContainer}>\r\n\r\n                    {pokemonData.filter((pokemon) => {\r\n                        if(searchPokemon === \"\"){\r\n                            return pokemon;\r\n                        }\r\n                        else if (pokemon.name.toLowerCase().includes(searchPokemon.toLowerCase()))\r\n                        {\r\n                            return pokemon;\r\n                        }\r\n                        return false;\r\n                    }).map((pokemon) => {\r\n                        return(\r\n                            <PokemonCard pokemon={pokemon} image={pokemon.url} key={pokemon.id} />\r\n                        )\r\n                    }\r\n                )}\r\n\r\n                </Grid>\r\n            : <CircularProgress style={{marginTop: 100}}/>}\r\n\r\n            <Stack className={classes.paginationStack}>\r\n                <Pagination \r\n                    count={23}\r\n                    pageSize={20}\r\n                />\r\n            </Stack>\r\n        </Box>\r\n    )\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\nimport { useState } from 'react';\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function BasicModal(props) {\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    return (\r\n        <div>\r\n            <Button onClick={handleOpen}>{props.ability}</Button>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n                <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                    Ability:\r\n                </Typography>\r\n                <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n                    {props.ability}\r\n                </Typography>\r\n                </Box>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n","import { Box, CircularProgress, Grid, Typography } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport axios from 'axios';\r\nimport React, { Component } from 'react'\r\nimport { POKEMON_API_URL } from '../config';\r\nimport AbilityModal from '../components/AbilityModal';\r\n\r\nconst styles = (theme) => ({\r\n    mainBox: {\r\n        marginLeft: 150,\r\n        margin: 'auto'\r\n    },\r\n    pokedexContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        height: '80vh',\r\n        width: '80%',\r\n        backgroundColor: 'lightblue',\r\n        color: 'darkblue',\r\n        margin: 75,\r\n        textAlign: 'center',\r\n        borderRadius: 5,\r\n        paddingTop: 30\r\n    },\r\n    textTitle: {\r\n        textTransform: 'upperCase',\r\n        fontFamily: 'Fantasy',\r\n        fontSize: 40\r\n    },\r\n    imgPokemon: {\r\n        width: '400px',\r\n        height: '400px',\r\n        padding: 10\r\n    },\r\n    pokemonImgContainer: {\r\n        display: 'grid',\r\n        alignItems: 'center'\r\n    },\r\n    pokemonInfoContainer: {\r\n        paddingTop: 40,\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    lineSeparator: {\r\n        height: '0.01mm',\r\n        width: '95%',\r\n\r\n    },\r\n    faveButton: {\r\n        height: 40,\r\n        width: 40,\r\n        marginTop: 15\r\n    },\r\n    faveIcon: {\r\n        color: 'red',\r\n        textAlign: 'center',\r\n        fontSize: 40\r\n    },\r\n    text: {\r\n        fontSize: 30,\r\n        textAlign: 'center',\r\n        fontFamily: 'Verdana'\r\n    },\r\n    textDetails: {\r\n        fontSize: 18,\r\n        textAlign: 'center',\r\n        padding: 3,\r\n        color: 'black',\r\n        textTransform: 'capitalize'\r\n    },\r\n    grid: {\r\n        padding: 10\r\n    },\r\n    pokemonNavName: {\r\n        textAlign: 'right',\r\n        top: 18,\r\n        right: 50,\r\n        position: 'fixed',\r\n        zIndex: 1000,\r\n        textTransform: 'capitalize',\r\n        color: 'white'\r\n    },\r\n    abilityModal: {\r\n        color: 'black',\r\n        textTransform: 'capitalize'\r\n    }\r\n})\r\n\r\n\r\n\r\nclass PokemonDetails extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            pokemon: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        const {match}= this.props;\r\n        const {id} = match?.params;\r\n\r\n        axios.get(POKEMON_API_URL + \"/\" + id).then((response) => {\r\n            if(response.status >= 200 && response.status < 300)\r\n            {\r\n                console.log(response.data);\r\n                this.setState({pokemon: response.data})\r\n            }\r\n        });\r\n\r\n        \r\n    };\r\n\r\n    render() {\r\n\r\n        const {classes} = this.props;\r\n        const {pokemon} = this.state;\r\n\r\n        if(pokemon){\r\n\r\n            const {name, sprites, height, weight, types, abilities, stats}  = pokemon;\r\n                \r\n            return(\r\n                <div>\r\n                    <p className={classes.pokemonNavName}>Who's that Pokemon? It's <strong style={{color: 'yellow'}}>{name}</strong> !</p>\r\n                    <Box className={classes.mainBox}>\r\n                        <Box className={classes.pokedexContainer}>\r\n                            <Box className={classes.pokemonImgContainer}>\r\n                                <img src={sprites.other.dream_world.front_default ? sprites.other.dream_world.front_default : sprites.front_default} alt={name} className={classes.imgPokemon} />\r\n                            </Box>\r\n                            <Box className={classes.pokemonInfoContainer}>\r\n                                <Grid container>\r\n                                    <Grid item md={6} className={classes.grid}>\r\n                                        <Typography className={classes.text}>\r\n                                            <strong>NAME: </strong>\r\n                                            <p className={classes.textDetails}>{name}</p>\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item md={6} className={classes.grid}>\r\n                                        <Typography className={classes.text}>\r\n                                            <strong> TYPE: </strong>\r\n                                        </Typography>\r\n                                        \r\n                                        {types.map((pokemonType) => {\r\n                                            const {name} =pokemonType.type;\r\n                                            return(\r\n                                                <Typography className={classes.textDetails}>\r\n                                                    {name}\r\n                                                </Typography>\r\n                                            )\r\n                                        })}\r\n                                    </Grid>\r\n                                    <Grid item md={6} className={classes.grid}>\r\n                                        <Typography className={classes.text}>\r\n                                            <strong>HEIGHT:</strong>\r\n                                            <p className={classes.textDetails}>{height}</p>\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item md={6} className={classes.grid}>\r\n                                        <Typography className={classes.text}>\r\n                                            <strong>WEIGHT:</strong>\r\n                                            <p className={classes.textDetails}>{weight} kg</p>\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item md={6} className={classes.grid}>\r\n                                        <Typography className={classes.text}>\r\n                                            <strong>STATS:</strong>\r\n                                        </Typography>\r\n                                        {stats.map((pokemonStats) => {\r\n                                            const {base_stat} = pokemonStats;\r\n                                            const {name} = pokemonStats.stat;\r\n\r\n                                            return (\r\n                                                <Typography className={classes.textDetails} style={{textAlign: 'left', paddingLeft: 65}}>\r\n                                                    <strong style={{textTransform:'uppercase'}}>{name}</strong> : {base_stat}\r\n                                                </Typography>\r\n                                            )\r\n                                        })}\r\n                                    </Grid>\r\n                                    <Grid item md={6} className={classes.grid}>\r\n                                        <Typography className={classes.text}>\r\n                                            <strong>ABILITIES:</strong> \r\n                                        </Typography>\r\n                                        {abilities.map((pokemonAbility) => {\r\n                                            const {name} = pokemonAbility.ability;\r\n\r\n                                            return (\r\n                                                <AbilityModal ability={name} className={classes.abilityModal} > {name} </AbilityModal>\r\n                                                \r\n                                            )\r\n                                        })}\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Box>\r\n                        </Box>\r\n                    </Box>\r\n                </div>\r\n                \r\n            )\r\n        }\r\n        else\r\n        {\r\n            return <CircularProgress />\r\n        }\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(PokemonDetails);","import React from 'react';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport AppNavigator from './components/AppNavigator';\r\nimport Pokedex from './containers/Pokedex';\r\nimport PokemonDetails from './containers/PokemonDetails';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <AppNavigator />\r\n        <Route exact path=\"/\" component={Pokedex} />\r\n        <Route exact path=\"/pokemon/:id\" component={PokemonDetails} />\r\n    </Router>\r\n  )\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}